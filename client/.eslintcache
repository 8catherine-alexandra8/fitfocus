[{"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/index.js":"1","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/App.js":"2","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reportWebVitals.js":"3","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Footer.js":"4","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/settings.js":"5","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/FormContainer.js":"6","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/FocusScreen.js":"7","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ShortBreakScreen.js":"8","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LongBreakScreen.js":"9","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LazyBreakScreen.js":"10","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ReportCardScreen.js":"11","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/NavCard.js":"12","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Tracker.js":"13","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Controls.js":"14","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SplashScreen.js":"15","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/exercises.js":"16","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SettingsEditScreen.js":"17","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/store.js":"18","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reducers/settingReducers.js":"19","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/actions/settingActions.js":"20","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/constants/settingConstants.js":"21","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Message.js":"22","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Loader.js":"23","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reducers/exerciseReducers.js":"24","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/constants/exerciseConstants.js":"25","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/actions/exerciseActions.js":"26","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/ExerciseCard.js":"27"},{"size":582,"mtime":1611881098191,"results":"28","hashOfConfig":"29"},{"size":1498,"mtime":1612127338712,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1611245493972,"results":"31","hashOfConfig":"29"},{"size":327,"mtime":1611339382057,"results":"32","hashOfConfig":"29"},{"size":1437,"mtime":1611781814655,"results":"33","hashOfConfig":"29"},{"size":335,"mtime":1611333683986,"results":"34","hashOfConfig":"29"},{"size":6292,"mtime":1612388126177,"results":"35","hashOfConfig":"29"},{"size":8325,"mtime":1612456805600,"results":"36","hashOfConfig":"29"},{"size":4305,"mtime":1612388114728,"results":"37","hashOfConfig":"29"},{"size":3105,"mtime":1612314975291,"results":"38","hashOfConfig":"29"},{"size":1978,"mtime":1611509516550,"results":"39","hashOfConfig":"29"},{"size":726,"mtime":1612309645816,"results":"40","hashOfConfig":"29"},{"size":1195,"mtime":1611937244624,"results":"41","hashOfConfig":"29"},{"size":1804,"mtime":1612201635308,"results":"42","hashOfConfig":"29"},{"size":4050,"mtime":1612411370198,"results":"43","hashOfConfig":"29"},{"size":19927,"mtime":1611633307560,"results":"44","hashOfConfig":"29"},{"size":5743,"mtime":1612382152299,"results":"45","hashOfConfig":"29"},{"size":1179,"mtime":1612399657557,"results":"46","hashOfConfig":"29"},{"size":4273,"mtime":1612394485192,"results":"47","hashOfConfig":"29"},{"size":4852,"mtime":1612394080716,"results":"48","hashOfConfig":"29"},{"size":2044,"mtime":1612394080721,"results":"49","hashOfConfig":"29"},{"size":234,"mtime":1611894419601,"results":"50","hashOfConfig":"29"},{"size":352,"mtime":1611894466049,"results":"51","hashOfConfig":"29"},{"size":488,"mtime":1612407375529,"results":"52","hashOfConfig":"29"},{"size":177,"mtime":1612399117139,"results":"53","hashOfConfig":"29"},{"size":560,"mtime":1612399399866,"results":"54","hashOfConfig":"29"},{"size":1607,"mtime":1612454263202,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"11lpt6g",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/index.js",[],["121","122"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/App.js",["123","124"],"import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport SplashScreen from './screens/SplashScreen'\n//import SettingsCreateScreen from './screens/SettingsCreateScreen'\nimport SettingsEditScreen from './screens/SettingsEditScreen'\nimport FocusScreen from './screens/FocusScreen'\nimport ShortBreakScreen from './screens/ShortBreakScreen'\nimport LazyBreakScreen from './screens/LazyBreakScreen'\nimport LongBreakScreen from './screens/LongBreakScreen'\nimport ReportCardScreen from './screens/ReportCardScreen'\n\nconst App = () => {\n\tconst pathname = window.location.pathname\n\treturn (\n\t\t<Router>\n\t\t\t<main className='py-3'>\n\t\t\t\t<Container className='container'>\n\t\t\t\t\t<Route path='/' component={SplashScreen} exact />\n\t\t\t\t\t{/* <Route path='/settings' component={SettingsCreateScreen} exact /> */}\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/settings/:id/edit'\n\t\t\t\t\t\tcomponent={SettingsEditScreen}\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/focus/:id' component={FocusScreen} exact />\n\t\t\t\t\t<Route\n\t\t\t\t\t\tpath='/shortbreak/:id'\n\t\t\t\t\t\tcomponent={ShortBreakScreen}\n\t\t\t\t\t\texact\n\t\t\t\t\t/>\n\t\t\t\t\t<Route path='/lazybreak/:id' component={LazyBreakScreen} />\n\t\t\t\t\t<Route path='/longbreak/:id' component={LongBreakScreen} exact />\n\t\t\t\t\t<Route path='/reportcard' component={ReportCardScreen} />\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t{pathname === '/' ? <div /> : <Footer />}\n\t\t</Router>\n\t)\n}\nexport default App\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reportWebVitals.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Footer.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/settings.js",[],["125","126"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/FormContainer.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/FocusScreen.js",["127","128","129","130","131","132","133","134","135","136","137"],"import React, { useEffect, useState, useRef } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, ProgressBar, Button, Navbar, Container, Nav } from 'react-bootstrap'\nimport useSound from 'use-sound'\nimport NavCard from '../components/NavCard'\nimport Tracker from '../components/Tracker'\nimport transitionSfx from '../sounds/transition.mp3'\nimport longBreakAlertSfx from '../sounds/longBreakAlert.mp3'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSettingDetails, updateSettingFocusCt } from '../actions/settingActions'\nimport { SETTING_UPDATE_FOCUSCT_RESET } from '../constants/settingConstants'\n\nconst FocusScreen = ({match}) => {\n\tconst history = useHistory()\n\tconst interval = useRef(null)\n\tlet progress\n\t//const source = (window.location.pathname).split('/')[1]\n\n\t//Sounds\n\tconst [playTransition] = useSound(transitionSfx, { volume: 0.25 })\n\tconst [playLongBreakAlert] = useSound(longBreakAlertSfx, { volume: 0.25 })\n\n\t//Redux dispatch and state access\n\tconst dispatch = useDispatch()\n\tconst settingDetails = useSelector((state) => state.settingDetails)\n\tconst { loading, error, success, setting} = settingDetails\n\n\tconst settingUpdateFocusCt = useSelector((state) => state.settingUpdateFocusCt)\n\tconst { loading: loadingUpdate, error: errorUpdate, success: successUpdate, setting: settingUpdated} = settingUpdateFocusCt\n\n\t//component level state\n\tconst [intervalTime, setIntervalTime] = useState()\n\tconst intervalRef = useRef(intervalTime)\n\tintervalRef.current = intervalTime\n\tconst [pause, setPause] = useState(true)\n\tconst [percentProgress, setPercentProgress] = useState(0)\n\tconst progressRef = useRef(percentProgress)\n\tprogressRef.current = percentProgress\n\tconst [barLgth, setBarLgth] = useState(0)\n\n\t//Redux get setting that has _id matching id in url\n\tuseEffect(() => {\n\t\tdispatch(listSettingDetails(match.params.id))\n\t}, [dispatch])\n\n\t//use application state to set component state value for interval\n\tuseEffect(() => {\n\t\tif (success || successUpdate) {\n\t\t\tsetIntervalTime(setting.focusIntvlLgth)\n\t\t\tif(history && history.location.state.from === 'break') {\n\t\t\t\tsetPause(false)\n\t\t\t}\n\t\t}\n\t}, [success, history, successUpdate])\n\n\t//use application state to set component state value for prog bar length\n\tuseEffect(() => {\n\t\tif (setting && intervalRef.current) {\n\t\t\tprogress = Math.floor(((setting.focusIntvlLgth-intervalRef.current)/setting.focusIntvlLgth) * 100)\n\t\t\tconsole.log(intervalRef.current, intervalTime)\n\t\t\tsetBarLgth(progress)\n\t\t}\n\t\t\n\t}, [intervalRef.current, setting])\n\n\t//Timer \n\tuseEffect(\n\t\t() => {\n\t\t\tif (!loading && !pause && intervalRef.current > 0) {\n\t\t\t\tinterval.current = setInterval(() => {\n\t\t\t\t\tsetIntervalTime((minutes) => minutes - 1)\n\t\t\t\t\tif (intervalRef.current <= 0) {\n\t\t\t\t\t\tclearInterval(interval.current)\n\t\t\t\t\t}\n\t\t\t\t}, 1000) \n\t\t\t\t//60000 is one minute so currently set 1sec: 1min\n\t\t\t}else if (pause && intervalRef.current !== 0) {\n\t\t\t\tclearInterval(interval.current)\n\t\t\t}\n\t\t\t \n\t\t\treturn () => {\n\t\t\t\tclearInterval(interval.current)\n\t\t\t}\n\t\t},\n\t\t[ loading, pause ]\n\t) \n\n\t//Update focusRoundCt and focusIntvlCt and direct user to \n\t//shortBreak or longBreak depending on RoundCt\n\tuseEffect(() => {\n\t\tif (!loading && !pause && !successUpdate && !loadingUpdate && intervalTime === 0) {\n\t\t\tdispatch(updateSettingFocusCt({\n\t\t\t\t_id: setting._id,\n\t\t\t\tfocusRoundCt: setting.focusRoundCt + 1,\n\t\t\t\tfocusIntvlCt: setting.focusIntvlCt + 1\n\t\t\t}))\n\t\t}\n\t\tif (successUpdate && settingUpdated.focusRoundCt <=3) {\n\t\t\tdispatch({ type: SETTING_UPDATE_FOCUSCT_RESET })\n\t\t\tplayTransition()\n\t\t\thistory.push(`/shortbreak/${setting._id}`)\n\t\t}\n\t\tif (successUpdate && settingUpdated.focusRoundCt === 4) {\n\t\t\tdispatch({ type: SETTING_UPDATE_FOCUSCT_RESET })\n\t\t\tplayLongBreakAlert()\n\t\t\thistory.push(`/longbreak/${setting._id}`)\n\t\t}\n\t\t\n\t}, [loading, pause, dispatch, successUpdate, intervalTime, settingUpdated, loadingUpdate])\n\n\t//Button controls\n\t const resetInterval = () => {\n\t\tsetPause(true)\n\t\twindow.location.reload()\n\t}\n\t const quit = () => {\n\t\t console.log('quit')\n\t }\n\treturn (\n\t\t\n\t\t<Card className='card card-focus text-white bg-primary m-4'>\n\t\t\t{loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : success && (\n\t\t\t\t<>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<NavCard id={setting._id} from='focus' />\n\t\t\t</Card.Header>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1 className='timecard-title-focus'>\n\t\t\t\t\t<i className='fas fa-brain px-4 icon-focus-brain' />Focus<i className='fas fa-brain px-4 icon-focus-brain' />\n\t\t\t\t</h1>\n\t\t\t</Card.Header>\t\t\t\t\n\t\t\t<Card.Body className='p-4'>\n\t\t\t\t<h1 className='timer text-center'>{intervalTime}</h1>\n\t\t\t\t<h2 className='text-center'>minutes</h2>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<div style={{ width : '80%', marginLeft: 'auto', marginRight: 'auto'}}>\n\t\t\t\t<ProgressBar\n\t\t\t\t\tclassName='progress-bar-secondary progress-bar-striped progress-bar-animated'\n\t\t\t\t\tnow= {barLgth}\n\t\t\t\t\tanimated\n\t\t\t\t/>\t\n\t\t\t\t</div>\t\n\t\t\t</Card.Body>\n\t\t\t<Tracker totalCompleted={setting.focusIntvlCt} roundTracker={setting.focusRoundCt} intervalsGoal={setting.focusIntvlGoal}/>\t<Card.Footer className='p-3 text-center'>\n\t\t\t\t<Button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-success mr-3'\n\t\t\t\t\tonClick={() => setPause(false)}\n\t\t\t\t>\n\t\t\t\t\t<i className='fas fa-play' />\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-secondary mr-3'\n\t\t\t\t\tonClick={() => setPause(!pause)}\n\t\t\t\t>\n\t\t\t\t\t<i className='fas fa-pause' />\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-light mr-3'\n\t\t\t\t\tonClick={() => resetInterval()}\n\t\t\t\t>\n\t\t\t\t\t<i className='fas fa-redo-alt' />\n\t\t\t\t</Button>\n\t\t\t\t<Button type='button' className='btn btn-danger'>\n\t\t\t\t\t<i className='fas fa-power-off' onClick={() => quit()} />\n\t\t\t\t</Button>\n\t\t\t</Card.Footer>\t\t\n\t\t\t</>\n\t\t\t)} \n\t\t</Card>\n\t)\n}\n\nexport default FocusScreen\n\n\t\t\t\t{/* <Navbar bg='dark' variant='dark' className='navbar'>\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t<Navbar.Brand>FitFocus</Navbar.Brand>\n\t\t\t\t\t\t<Nav className='ml-auto'>\n\t\t\t\t\t\t\t<Link to={`/settings/${setting._id}/edit`}>\n\t\t\t\t\t\t\t\t<i className='fas fa-cog icon-nav' />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Container>\n\t\t\t\t</Navbar> */}\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ShortBreakScreen.js",["138","139","140","141","142","143","144","145","146","147"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LongBreakScreen.js",["148","149","150","151","152","153"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, ProgressBar } from 'react-bootstrap'\nimport useSound from 'use-sound'\nimport transitionSfx from '../sounds/transition.mp3'\nimport NavCard from '../components/NavCard'\nimport Tracker from '../components/Tracker'\nimport Controls from '../components/Controls'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSettingDetails, updateSettingRoundCt  } from '../actions/settingActions'\nimport { SETTING_UPDATE_ROUNDCT_RESET } from '../constants/settingConstants'\n//import { SETTING_UPDATE_RESET } from '../constants/settingConstants'\n\n\nconst LongBreakScreen = ({match}) => {\n\tconst history = useHistory()\n\n\t//Sounds\n\tconst [playTransition] = useSound(transitionSfx, { volume: 0.25 })\n\n\t//Redux dispatch and state access\n\tconst dispatch = useDispatch()\n\tconst settingDetails = useSelector((state) => state.settingDetails)\n\tconst { loading, error, setting} = settingDetails\n\n\tconst settingUpdateRoundCt = useSelector((state) => state.settingUpdateRoundCt)\n\tconst { loading: loadingRoundCtUpdate, error: errorRoundCtUpdate, success: successRoundCtUpdate, setting: settingRoundCtUpdated} = settingUpdateRoundCt\n\n\t//component level state\n\tconst [intervalTime, setIntervalTime] = useState()\n\tconst [pause, setPause] = useState(false)\n\n\t//Redux get setting that has _id matching id in url\n\tuseEffect(() => {\n\t\tdispatch(listSettingDetails(match.params.id))\n\t}, [match, dispatch])\n\n\t//use application state to set component state\n\tuseEffect(() => {\n\t\tif (setting._id) {\n\t\t\tconsole.log('this ran')\n\t\t\tconsole.log(setting.focusRoundCt)\n\t\t\tsetIntervalTime(setting.longBrkIntvlLgth)\n\t\t// \tif (setting._id && setting.focusRoundCt === 3) {\n\t\t// \t\t\t\t\t\t\tconsole.log('this ran')\n\n\t\t// \tconsole.log(setting.focusRoundCt)\n\t\t// \tdispatch(updateSetting({\n\t\t// \t\t_id: setting._id,\n\t\t// \t\tfocusRoundCt: 0,\n\t\t// \t}))\n\t\t// }\n\t\t}\n\t}, [setting._id])\n\n\t//Timer \n\tuseEffect(\n\t\t() => {\n\n\t\t\tlet interval = null\n\t\t\tif (!loading && !loadingRoundCtUpdate && !pause && intervalTime > 0) {\n\n\t\t\t\tinterval = setInterval(() => {\n\t\t\t\t\tsetIntervalTime((minutes) => minutes - 1)\n\t\t\t\t}, 1000)\n\t\t\t\t//60000 is one minute so currently set 1sec: 1min\n\t\t\t\t//? get progress bar animation in here ?\n\t\t\t} \t\t\t\n\t\t\treturn () => {\n\t\t\t\tclearInterval(interval)\n\t\t\t}\n\t\t},\n\t\t[ pause, loading, intervalTime, loadingRoundCtUpdate ]\n\t) \n\n//Update focusRoundCt in app state\n\tuseEffect(() => {\n\t\tif (\n\t\t\t!loading &&\n\t\t\t!pause &&\n\t\t\t!successRoundCtUpdate &&\n\t\t\t!loadingRoundCtUpdate &&\n\t\t\tintervalTime === 0 \n\t\t) {\n\t\t\t dispatch(updateSettingRoundCt({\n\t\t\t \t_id: setting._id,\n\t\t\t\t focusRoundCt: 0,\n\t\t\t }))\n\t\t\t}\n\t}, [intervalTime, dispatch])\n\n//send user back to focus after focusRoundCt updated\n\tuseEffect(() => {\n\t\tif (successRoundCtUpdate && !loading && !loadingRoundCtUpdate) {\n\t\t\tdispatch({ type: SETTING_UPDATE_ROUNDCT_RESET })\n\t\t\tplayTransition()\n\t\t\thistory.push(`/focus/${setting._id}`, {from: 'break'})\n\t\t}\n\t\t \n\t}, [successRoundCtUpdate])\n\n\treturn (\n\t\t\t\t<>\n\t \t{loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n\n\t\t<Card className='card card-longbreak border-secondary m-4'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<NavCard id={setting._id} from='longBreak' />\n\t\t\t</Card.Header>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1>\n\t\t\t\t\t<i className='far fa-grin-beam-sweat icon-break-smile px-4' />Long\n\t\t\t\t\tBreak<i className='far fa-grin-beam-sweat icon-break-smile px-4' />\n\t\t\t\t</h1>\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className='p-4'>\n\t\t\t\t<h1 className='timer text-center'>{intervalTime}</h1>\n\t\t\t\t<h2 className='text-center'>minutes</h2>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<ProgressBar\n\t\t\t\t\tclassName='progress-bar progress-bar-striped progress-bar-animated '\n\t\t\t\t\trole='progressbar'\n\t\t\t\t\taria-valuenow='75'\n\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\tstyle={{ width: '75%', marginLeft: 'auto', marginRight: 'auto' }}\n\t\t\t\t/>\n\t\t\t</Card.Body>\n\t\t\t<Tracker totalCompleted={setting.focusIntvlCt} roundTracker={setting.focusRoundCt} intervalsGoal={setting.focusIntvlGoal}/>\n\t\t\t<Controls />\n\t\t</Card>\n\t\t\t\t)} \n\t\t\n\t\t</>\n\n\t)\n}\n\nexport default LongBreakScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LazyBreakScreen.js",["154","155","156","157","158","159","160","161"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, ProgressBar } from 'react-bootstrap'\nimport useSound from 'use-sound'\nimport transitionSfx from '../sounds/transition.mp3'\nimport NavCard from '../components/NavCard'\nimport Tracker from '../components/Tracker'\nimport Controls from '../components/Controls'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSettingDetails } from '../actions/settingActions'\n\nconst LazyBreakScreen = ({ location }) => {\n\tconst history = useHistory()\n\n\t//Sounds\n\tconst [ playTransition ] = useSound(transitionSfx, { volume: 0.25 })\n\n\t//Redux dispatch and state access\n\tconst dispatch = useDispatch()\n\tconst settingDetails = useSelector((state) => state.settingDetails)\n\tconst { loading, error, setting } = settingDetails\n\n\t//component level state\n\tconst [ intervalTime, setIntervalTime ] = useState()\n\tconst [ pause, setPause ] = useState(false)\n\n\t//Pull time left on break from URL, set it as value for\n\t//component level intervalTime state and update application\n\t//level state to reflect exerciseBreak now false\n\tuseEffect(() => {\n\t\tconst timeLeftInBreak = location.search.split('=')[1] * 1\n\t\tsetIntervalTime(timeLeftInBreak)\n\t\t// \tset setting.shortBreak.exerciseBreak to false\n\t\t// at application level\n\t}, [])\n\n\t//Timer\n\tuseEffect(\n\t\t() => {\n\t\t\tlet interval = null\n\n\t\t\tif (!loading && !pause && intervalTime > 0) {\n\t\t\t\tinterval = setInterval(() => {\n\t\t\t\t\tsetIntervalTime((minutes) => minutes - 1)\n\t\t\t\t}, 1000)\n\t\t\t\t//60000 is one minute so currently set 1sec: 1min\n\t\t\t\t//? get progress bar animation in here ?\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\tclearInterval(interval)\n\t\t\t}\n\t\t},\n\t\t[ loading, pause, intervalTime ]\n\t)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tif (!loading && !pause && intervalTime <= 0) {\n\t\t\t\tplayTransition()\n\t\t\t\thistory.push(`/focus/${setting._id}`, { from: 'break' })\n\t\t\t}\n\t\t},\n\t\t[ loading, pause, intervalTime ]\n\t)\n\n\treturn (\n\t\t<Card className='card card-lazybreak border-secondary m-4'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<NavCard />\n\t\t\t</Card.Header>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1>\n\t\t\t\t\t<i className='fas fa-spa px-4 icon-lazy-plant' />Lazy Break<i className='fas fa-spa px-4 icon-lazy-plant' />\n\t\t\t\t</h1>\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className='p-4'>\n\t\t\t\t<h1 className='timer text-center'>{intervalTime}</h1>\n\t\t\t\t<h2 className='text-center'>minutes</h2>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<ProgressBar\n\t\t\t\t\tclassName='progress-bar progress-bar-striped progress-bar-animated '\n\t\t\t\t\trole='progressbar'\n\t\t\t\t\taria-valuenow='75'\n\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\tstyle={{ width: '75%', marginLeft: 'auto', marginRight: 'auto' }}\n\t\t\t\t/>\n\t\t\t</Card.Body>\n\t\t\t<Tracker\n\t\t\t\ttotalCompleted={setting.focusIntvlCt}\n\t\t\t\troundTracker={setting.focusRoundCt}\n\t\t\t\tintervalsGoal={setting.focusIntvlGoal}\n\t\t\t/>\n\t\t\t<Controls />\n\t\t</Card>\n\t)\n}\n\nexport default LazyBreakScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ReportCardScreen.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/NavCard.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Tracker.js",["162"],"import React, { useState, useEffect } from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport settings from '../settings'\n\nconst Tracker = () => {\n\tconst [ setting, setSetting ] = useState()\n\tconst [ loading, setLoading ] = useState(true)\n\n\tuseEffect(() => {\n\t\tsetSetting(settings[0])\n\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetting && setLoading(false)\n\t})\n\n\treturn (\n\t\t<>\n\t\t{!loading &&\n\t\t<Card.Body className='p-4 tracking-container'>\n\t\t\t<Col className='rounds-container float-left'>\n\t\t\t\t<Card.Header className='rounds-header ml-auto mr-auto'>\n\t\t\t\t\t<h2 className='text-center'>Rounds</h2>\n\t\t\t\t</Card.Header>\n\t\t\t\t<h3 className='rounds-progress text-center'>{setting.focus.roundTracker} </h3>\n\t\t\t\t<hr />\n\t\t\t\t<h5 className='denominator-focus text-center'>4</h5>\n\t\t\t</Col>\n\t\t\t<Col className='goal-container float-right'>\n\t\t\t\t<Card.Header className='goal-header ml-auto mr-auto'>\n\t\t\t\t\t<h2 className='text-center'>Goal</h2>\n\t\t\t\t</Card.Header>\n\t\t\t\t<h3 className='goal-progress text-center'>{setting.focus.completedIntervalCount}</h3>\n\t\t\t\t<hr />\n\t\t\t\t<h5 className='denominator-focus text-center'>{setting.focus.completedIntervalGoal}</h5>\n\t\t\t</Col>\n\t\t</Card.Body>\n\t\t}\n\t\t</>\n\t)\n}\n\nexport default Tracker\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Controls.js",["163"],"import React, { useState } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Controls = ({ match }) => {\n\tconst pathname = window.location.pathname\n\t// const screen = window.location.pathname.split('/')[1]\n\t// const settingId = window.location.pathname.split('/')[2]\n\tconst history = useHistory()\n\tconst [ pause, setPause ] = useState(true)\n\n\tconst skipBreak = () => {\n\t\thistory.push('/focus')\n\t}\n\tconst handlePause = () => {\n\t\tconsole.log('pause button clicked')\n\t}\n\tconst resetInterval = () => {\n\t\tconsole.log('reset Interval')\n\t\t// pathname === '/focus' && setFocusInterval(setting.focus.intervalTime)\n\t\t// pathname === '/shortbreak' || '/lazybreak' && setFocusInterval(setting.shortBreak.intervalTime)\n\t\t// pathname === '/longBreak' && setFocusInterval(setting.longBreak.intervalTime)\n\t}\n\tconst quit = () => {\n\t\thistory.push('/reportcard')\n\t}\n\treturn (\n\t\t<Card.Footer className='p-3 text-center'>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-success mr-3'\n\t\t\t\tonClick={() => setPause(false)}\n\t\t\t>\n\t\t\t\t<i className='fas fa-play' />\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-secondary mr-3'\n\t\t\t\tonClick={() => handlePause()}\n\t\t\t>\n\t\t\t\t<i className='fas fa-pause' />\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-light mr-3'\n\t\t\t\tonClick={() => resetInterval()}\n\t\t\t>\n\t\t\t\t<i className='fas fa-redo-alt' />\n\t\t\t</Button>\n\t\t\t{pathname !== '/focus' && (\n\t\t\t\t<Button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-primary mr-3'\n\t\t\t\t\tonClick={() => skipBreak()}\n\t\t\t\t>\n\t\t\t\t\t<i className='fas fa-forward' />\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t\t<Button type='button' className='btn btn-danger'>\n\t\t\t\t<i className='fas fa-power-off' onClick={() => quit()} />\n\t\t\t</Button>\n\t\t</Card.Footer>\n\t)\n}\n\nexport default Controls\n//\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SplashScreen.js",["164","165","166","167","168","169"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport { motion } from 'framer-motion'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listTodaySetting, createSetting } from '../actions/settingActions'\nimport { SETTING_CREATE_RESET } from '../constants/settingConstants'\n\nconst SplashScreen = () => {\n\tconst history = useHistory()\n\tconst dispatch = useDispatch()\n\n\tconst settingToday = useSelector((state) => state.settingToday)\n\tconst { loading, error, setting } = settingToday\n\n\tconst settingCreate = useSelector((state) => state.settingCreate)\n\tconst {\n\t\tloading : loadingCreate,\n\t\terror   : errorCreate,\n\t\tsuccess : successCreate,\n\t\tsetting : createdSetting\n\t} = settingCreate\n\n\n\t//Grabs state resulting from redux dispatch of listSetting()\n\t//to access all settings in DB\n\t// const settingList = useSelector((state) => state.settingList)\n\t// const { loading, error, settings } = settingList\n\n\tuseEffect(\n\t\t() => {\n\t\t\tdispatch(listTodaySetting())\n\t\t},\n\t\t[ dispatch ]\n\t)\n\n\t//This use effect gets list of all setting records in DB via Redux\n\t// useEffect(\n\t// \t() => {\n\t// \t\tdispatch(listSettings())\n\t// \t},\n\t// \t[ dispatch ]\n\t// )\n\n\t//directs user to SettingScreen or FocusScreen contingent upon\n\t//existance of (today)setting but allows time for animated\n\t//splash to finish first, before redirecting user\n\tuseEffect(\n\t\t() => {\n\t\t\tif (setting) {\n\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\thistory.push(`/focus/${setting._id}`, { from: 'splash' })\n\t\t\t\t}, 6000)\n\t\t\t\treturn () => {\n\t\t\t\t\tclearTimeout(timer)\n\t\t\t\t}\n\t\t\t} else if (!loading && !setting && !createdSetting) {\n\t\t\t\t//dispatch({ type: SETTING_CREATE_RESET })\n\t\t\t\tdispatch(createSetting())\n\t\t\t\t}\n\t\t\t\n\t\t\tif (successCreate) {\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\thistory.push(`settings/${createdSetting._id}/edit`, {from: 'splash'})\n\t\t\t\t\t}, 6000)\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tclearTimeout(timer)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t},\n\t\t[ dispatch, loading, setting, successCreate, createdSetting ]\n\t)\n\n\t//Animations\n\tconst splashAnim = {\n\t\thidden : { opacity: 0 },\n\t\tshow   : { opacity: 1, transition: { duration: 0.75 } }\n\t}\n\tconst animContainer = {\n\t\thidden : { y: 100 },\n\t\tshow   : {\n\t\t\ty          : 0,\n\t\t\ttransition : {\n\t\t\t\tduration        : 1,\n\t\t\t\tease            : 'easeOut',\n\t\t\t\tstaggerChildren : 0.5\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t{loadingCreate && <Loader />}\n\t\t{errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\t\t{loading ? (<Loader />) : (\n\t\t<Card className='card border-primary mb-3 splash-card'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1>FitFocus</h1>\n\t\t\t</Card.Header>\n\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<Col className='splash-card-text-container text-center hide'>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tvariants={animContainer}\n\t\t\t\t\t\tinitial='hidden'\n\t\t\t\t\t\tanimate='show'\n\t\t\t\t\t\tclassName='hide'\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tAre\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tyou\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tready\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tto\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\twork\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.img\n\t\t\t\t\t\t\tvariants={splashAnim}\n\t\t\t\t\t\t\tsrc='../images/brainBiceps.png'\n\t\t\t\t\t\t\talt='brain with muscles'\n\t\t\t\t\t\t\twidth='250px'\n\t\t\t\t\t\t\tclassName='splash-img'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.div>\n\t\t\t\t</Col>\n\t\t\t\t<Card.Footer className='splash-card-footer'>\n\t\t\t\t\t<p className='text-center splash-footer-text'>\n\t\t\t\t\t\tCopyright &copy; 2021 Fit & Focused\n\t\t\t\t\t</p>\n\t\t\t\t</Card.Footer>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)}\n\t</>\n\t)\n}\n\nexport default SplashScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/exercises.js",[],["170","171"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SettingsEditScreen.js",["172","173","174","175"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport NavCard from '../components/NavCard'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n\tlistSettingDetails,\n\tupdateSettingTargets\n} from '../actions/settingActions'\nimport {\n\tSETTING_UPDATE_TARGETS_RESET,\n\tSETTING_CREATE_RESET\n} from '../constants/settingConstants'\n\nconst SettingsEditScreen = ({ match }) => {\n\tconst history = useHistory()\n\tconst settingId = match.params.id\n\tconst source = history.location.state.from\n\tconsole.log(source)\n\n\t//component level state\n\tconst [ focusInterval, setFocusInterval ] = useState(25)\n\tconst [ shortBreakInterval, setShortBreakInterval ] = useState(5)\n\tconst [ longBreakInterval, setLongBreakInterval ] = useState(25)\n\tconst [ focusGoal, setFocusGoal ] = useState(8)\n\n\t//Redux dispatch and state access\n\tconst dispatch = useDispatch()\n\tconst settingDetails = useSelector((state) => state.settingDetails)\n\tconst { loading, error, success, setting } = settingDetails\n\n\tconst settingUpdateTargets = useSelector(\n\t\t(state) => state.settingUpdateTargets\n\t)\n\tconst {\n\t\tloading : loadingUpdate,\n\t\terror   : errorUpdate,\n\t\tsuccess : successUpdate,\n\t\tsetting : settingUpdated\n\t} = settingUpdateTargets\n\n\t//Redux get setting that has _id matching id in url\n\tuseEffect(\n\t\t() => {\n\t\t\tif (successUpdate) {\n\t\t\t\t//dispatch({ type: SETTING_UPDATE_TARGETS_RESET })\n\t\t\t\t//dispatch({ type: SETTING_CREATE_RESET })\n\t\t\t\tdispatch(listSettingDetails(settingId))\n\t\t\t}\n\t\t},\n\t\t[ dispatch, history, successUpdate, success ]\n\t)\n\n\tconst goToFocus = () => {\n\t\tif (source !== 'splash') {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\thistory.push(`/${source}/${settingId}`, { from: 'settings' })\n\t\t\t}, 500)\n\t\t\treturn () => clearTimeout(timer)\n\t\t} else {\n\t\t\tconst timer = setTimeout(() => {\n\t\t\t\thistory.push(`/focus/${settingId}`, { from: 'settings' })\n\t\t\t}, 500)\n\t\t\treturn () => clearTimeout(timer)\n\t\t}\n\t}\n\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\tdispatch(\n\t\t\tupdateSettingTargets({\n\t\t\t\t_id               : settingId,\n\t\t\t\tfocusIntvlLgth    : focusInterval,\n\t\t\t\tshortBrkIntvlLgth : shortBreakInterval,\n\t\t\t\tlongBrkIntvlLgth  : longBreakInterval,\n\t\t\t\tfocusIntvlGoal    : focusGoal\n\t\t\t})\n\t\t)\n\t\tgoToFocus()\n\t}\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t{(loadingUpdate || successUpdate) && <Loader />}\n\t\t\t{errorUpdate && <Message variant='danger'>{error}</Message>}\n\t\t\t{loading ? (\n\t\t\t\t<Loader />\n\t\t\t) : error ? (\n\t\t\t\t<Message variant='danger'>{error}</Message>\n\t\t\t) : (\n\t\t\t\t<Card className='card card-settings text-white bg-secondary m-4'>\n\t\t\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t\t\t<NavCard />\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Card.Header className='text-center card-header px-5 py-3'>\n\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t<i className='fas fa-cog px-4' />Settings<i className='fas fa-cog px-4' />\n\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t<h5 className='card-subtitle py-2 text-center'>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\t{setting.date}\n\t\t\t\t\t\t</h5>\n\t\t\t\t\t</Card.Header>\n\t\t\t\t\t<Form className='form p-5' onSubmit={submitHandler}>\n\t\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect1'>\n\t\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\t\tFocus Interval\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tvalue={focusInterval}\n\t\t\t\t\t\t\t\tonChange={(e) => setFocusInterval(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t\t\t<option>30</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect2'>\n\t\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\t\tShort Break Interval\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tvalue={shortBreakInterval}\n\t\t\t\t\t\t\t\tonChange={(e) => setShortBreakInterval(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>5</option>\n\t\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect3'>\n\t\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\t\tLong Break Interval\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tvalue={longBreakInterval}\n\t\t\t\t\t\t\t\tonChange={(e) => setLongBreakInterval(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t\t\t<option>30</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect4'>\n\t\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\t\tTotal # Focus Sessions Goal\n\t\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\t\tvalue={focusGoal}\n\t\t\t\t\t\t\t\tonChange={(e) => setFocusGoal(e.target.value)}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>4</option>\n\t\t\t\t\t\t\t\t<option>6</option>\n\t\t\t\t\t\t\t\t<option>8</option>\n\t\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t\t<option>12</option>\n\t\t\t\t\t\t\t\t<option>16</option>\n\t\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button variant='primary' type='submit' className='btn-submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t</Card>\n\t\t\t)}\n\t\t</FormContainer>\n\t)\n}\n\nexport default SettingsEditScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/store.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reducers/settingReducers.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/actions/settingActions.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/constants/settingConstants.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Message.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Loader.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reducers/exerciseReducers.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/constants/exerciseConstants.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/actions/exerciseActions.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/ExerciseCard.js",["176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"187","line":1,"column":27,"nodeType":"185","messageId":"186","endLine":1,"endColumn":36},{"ruleId":"179","replacedBy":"188"},{"ruleId":"181","replacedBy":"189"},{"ruleId":"183","severity":1,"message":"190","line":2,"column":22,"nodeType":"185","messageId":"186","endLine":2,"endColumn":26},{"ruleId":"183","severity":1,"message":"191","line":4,"column":37,"nodeType":"185","messageId":"186","endLine":4,"endColumn":43},{"ruleId":"183","severity":1,"message":"192","line":4,"column":45,"nodeType":"185","messageId":"186","endLine":4,"endColumn":54},{"ruleId":"183","severity":1,"message":"193","line":4,"column":56,"nodeType":"185","messageId":"186","endLine":4,"endColumn":59},{"ruleId":"183","severity":1,"message":"194","line":31,"column":41,"nodeType":"185","messageId":"186","endLine":31,"endColumn":52},{"ruleId":"183","severity":1,"message":"195","line":38,"column":26,"nodeType":"185","messageId":"186","endLine":38,"endColumn":44},{"ruleId":"196","severity":1,"message":"197","line":46,"column":5,"nodeType":"198","endLine":46,"endColumn":15,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":56,"column":5,"nodeType":"198","endLine":56,"endColumn":38,"suggestions":"201"},{"ruleId":"196","severity":1,"message":"202","line":61,"column":15,"nodeType":"203","endLine":61,"endColumn":102},{"ruleId":"196","severity":1,"message":"204","line":111,"column":5,"nodeType":"198","endLine":111,"endColumn":91,"suggestions":"205"},{"ruleId":"206","severity":1,"message":"207","line":181,"column":5,"nodeType":"208","messageId":"209","endLine":190,"endColumn":18},{"ruleId":"183","severity":1,"message":"210","line":7,"column":8,"nodeType":"185","messageId":"186","endLine":7,"endColumn":16},{"ruleId":"183","severity":1,"message":"211","line":13,"column":8,"nodeType":"185","messageId":"186","endLine":13,"endColumn":20},{"ruleId":"183","severity":1,"message":"212","line":19,"column":8,"nodeType":"185","messageId":"186","endLine":19,"endColumn":16},{"ruleId":"183","severity":1,"message":"213","line":30,"column":26,"nodeType":"185","messageId":"186","endLine":30,"endColumn":33},{"ruleId":"183","severity":1,"message":"214","line":33,"column":117,"nodeType":"185","messageId":"186","endLine":33,"endColumn":141},{"ruleId":"196","severity":1,"message":"215","line":63,"column":5,"nodeType":"198","endLine":63,"endColumn":18,"suggestions":"216"},{"ruleId":"196","severity":1,"message":"217","line":94,"column":3,"nodeType":"198","endLine":94,"endColumn":34,"suggestions":"218"},{"ruleId":"196","severity":1,"message":"219","line":111,"column":6,"nodeType":"198","endLine":111,"endColumn":36,"suggestions":"220"},{"ruleId":"196","severity":1,"message":"221","line":120,"column":5,"nodeType":"198","endLine":120,"endColumn":30,"suggestions":"222"},{"ruleId":"183","severity":1,"message":"223","line":161,"column":8,"nodeType":"185","messageId":"186","endLine":161,"endColumn":26},{"ruleId":"183","severity":1,"message":"224","line":29,"column":48,"nodeType":"185","messageId":"186","endLine":29,"endColumn":66},{"ruleId":"183","severity":1,"message":"225","line":29,"column":108,"nodeType":"185","messageId":"186","endLine":29,"endColumn":129},{"ruleId":"183","severity":1,"message":"226","line":33,"column":16,"nodeType":"185","messageId":"186","endLine":33,"endColumn":24},{"ruleId":"196","severity":1,"message":"227","line":56,"column":5,"nodeType":"198","endLine":56,"endColumn":18,"suggestions":"228"},{"ruleId":"196","severity":1,"message":"229","line":92,"column":5,"nodeType":"198","endLine":92,"endColumn":29,"suggestions":"230"},{"ruleId":"196","severity":1,"message":"231","line":102,"column":5,"nodeType":"198","endLine":102,"endColumn":27,"suggestions":"232"},{"ruleId":"183","severity":1,"message":"233","line":10,"column":8,"nodeType":"185","messageId":"186","endLine":10,"endColumn":15},{"ruleId":"183","severity":1,"message":"234","line":11,"column":8,"nodeType":"185","messageId":"186","endLine":11,"endColumn":14},{"ruleId":"183","severity":1,"message":"235","line":12,"column":10,"nodeType":"185","messageId":"186","endLine":12,"endColumn":28},{"ruleId":"183","severity":1,"message":"236","line":21,"column":8,"nodeType":"185","messageId":"186","endLine":21,"endColumn":16},{"ruleId":"183","severity":1,"message":"237","line":23,"column":19,"nodeType":"185","messageId":"186","endLine":23,"endColumn":24},{"ruleId":"183","severity":1,"message":"226","line":27,"column":17,"nodeType":"185","messageId":"186","endLine":27,"endColumn":25},{"ruleId":"196","severity":1,"message":"238","line":37,"column":5,"nodeType":"198","endLine":37,"endColumn":7,"suggestions":"239"},{"ruleId":"196","severity":1,"message":"240","line":65,"column":3,"nodeType":"198","endLine":65,"endColumn":35,"suggestions":"241"},{"ruleId":"196","severity":1,"message":"242","line":17,"column":2,"nodeType":"185","endLine":17,"endColumn":11,"suggestions":"243"},{"ruleId":"183","severity":1,"message":"244","line":10,"column":10,"nodeType":"185","messageId":"186","endLine":10,"endColumn":15},{"ruleId":"183","severity":1,"message":"184","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"245","line":1,"column":38,"nodeType":"185","messageId":"186","endLine":1,"endColumn":44},{"ruleId":"183","severity":1,"message":"246","line":4,"column":16,"nodeType":"185","messageId":"186","endLine":4,"endColumn":19},{"ruleId":"183","severity":1,"message":"247","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":30},{"ruleId":"183","severity":1,"message":"237","line":16,"column":19,"nodeType":"185","messageId":"186","endLine":16,"endColumn":24},{"ruleId":"196","severity":1,"message":"248","line":73,"column":3,"nodeType":"198","endLine":73,"endColumn":64,"suggestions":"249"},{"ruleId":"179","replacedBy":"250"},{"ruleId":"181","replacedBy":"251"},{"ruleId":"183","severity":1,"message":"252","line":14,"column":2,"nodeType":"185","messageId":"186","endLine":14,"endColumn":30},{"ruleId":"183","severity":1,"message":"247","line":15,"column":2,"nodeType":"185","messageId":"186","endLine":15,"endColumn":22},{"ruleId":"183","severity":1,"message":"253","line":42,"column":13,"nodeType":"185","messageId":"186","endLine":42,"endColumn":27},{"ruleId":"196","severity":1,"message":"254","line":54,"column":3,"nodeType":"198","endLine":54,"endColumn":48,"suggestions":"255"},{"ruleId":"183","severity":1,"message":"256","line":14,"column":10,"nodeType":"185","messageId":"186","endLine":14,"endColumn":17},{"ruleId":"183","severity":1,"message":"257","line":17,"column":25,"nodeType":"185","messageId":"186","endLine":17,"endColumn":41},{"ruleId":"183","severity":1,"message":"258","line":19,"column":28,"nodeType":"185","messageId":"186","endLine":19,"endColumn":45},"no-native-reassign",["259"],"no-negated-in-lhs",["260"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["259"],["260"],"'Link' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'Nav' is defined but never used.","'errorUpdate' is assigned a value but never used.","'setPercentProgress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["261"],"React Hook useEffect has a missing dependency: 'setting.focusIntvlLgth'. Either include it or remove the dependency array.",["262"],"Assignments to the 'progress' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","React Hook useEffect has missing dependencies: 'history', 'playLongBreakAlert', 'playTransition', 'setting._id', 'setting.focusIntvlCt', and 'setting.focusRoundCt'. Either include them or remove the dependency array.",["263"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Controls' is defined but never used.","'ExerciseCard' is defined but never used.","'pathname' is assigned a value but never used.","'success' is assigned a value but never used.","'settingExerciseCtUpdated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setting.shortBrkIntvlLgth'. Either include it or remove the dependency array.",["264"],"React Hook useEffect has a missing dependency: 'playMinuteAlert'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'dispatch', 'loadingExerciseCtUpdate', 'setting._id', 'setting.exerciseBrkCt', and 'successExerciseCtUpdate'. Either include them or remove the dependency array.",["266"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'playTransition', and 'setting._id'. Either include them or remove the dependency array.",["267"],"'handleNextExercise' is assigned a value but never used.","'errorRoundCtUpdate' is assigned a value but never used.","'settingRoundCtUpdated' is assigned a value but never used.","'setPause' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setting.focusRoundCt' and 'setting.longBrkIntvlLgth'. Either include them or remove the dependency array.",["268"],"React Hook useEffect has missing dependencies: 'loading', 'loadingRoundCtUpdate', 'pause', 'setting._id', and 'successRoundCtUpdate'. Either include them or remove the dependency array.",["269"],"React Hook useEffect has missing dependencies: 'dispatch', 'history', 'loading', 'loadingRoundCtUpdate', 'playTransition', and 'setting._id'. Either include them or remove the dependency array.",["270"],"'Message' is defined but never used.","'Loader' is defined but never used.","'listSettingDetails' is defined but never used.","'dispatch' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has missing dependencies: 'history', 'playTransition', and 'setting._id'. Either include them or remove the dependency array.",["272"],"React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [setting] as a second argument to the useEffect Hook.",["273"],"'pause' is assigned a value but never used.","'useRef' is defined but never used.","'Row' is defined but never used.","'SETTING_CREATE_RESET' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["274"],["259"],["260"],"'SETTING_UPDATE_TARGETS_RESET' is defined but never used.","'settingUpdated' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'settingId'. Either include it or remove the dependency array.",["275"],"'loading' is assigned a value but never used.","'setExerciseIndex' is assigned a value but never used.","'setExercisesExist' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},"Update the dependencies array to be: [dispatch, match.params.id]",{"range":"306","text":"307"},"Update the dependencies array to be: [success, history, successUpdate, setting.focusIntvlLgth]",{"range":"308","text":"309"},"Update the dependencies array to be: [loading, pause, dispatch, successUpdate, intervalTime, settingUpdated, loadingUpdate, setting._id, setting.focusRoundCt, setting.focusIntvlCt, playTransition, history, playLongBreakAlert]",{"range":"310","text":"311"},"Update the dependencies array to be: [setting._id, setting.shortBrkIntvlLgth]",{"range":"312","text":"313"},"Update the dependencies array to be: [loading, pause, intervalTime, playMinuteAlert]",{"range":"314","text":"315"},"Update the dependencies array to be: [loading, pause, intervalTime, successExerciseCtUpdate, loadingExerciseCtUpdate, dispatch, setting._id, setting.exerciseBrkCt]",{"range":"316","text":"317"},"Update the dependencies array to be: [dispatch, history, playTransition, setting._id, successExerciseCtUpdate]",{"range":"318","text":"319"},"Update the dependencies array to be: [setting._id, setting.focusRoundCt, setting.longBrkIntvlLgth]",{"range":"320","text":"321"},"Update the dependencies array to be: [intervalTime, dispatch, loading, pause, successRoundCtUpdate, loadingRoundCtUpdate, setting._id]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch, history, loading, loadingRoundCtUpdate, playTransition, setting._id, successRoundCtUpdate]",{"range":"324","text":"325"},"Update the dependencies array to be: [location.search]",{"range":"326","text":"327"},"Update the dependencies array to be: [loading, pause, intervalTime, playTransition, history, setting._id]",{"range":"328","text":"329"},"Add dependencies array: [setting]",{"range":"330","text":"331"},"Update the dependencies array to be: [dispatch, loading, setting, successCreate, createdSetting, history]",{"range":"332","text":"333"},"Update the dependencies array to be: [dispatch, history, successUpdate, success, settingId]",{"range":"334","text":"335"},[1971,1981],"[dispatch, match.params.id]",[2240,2273],"[success, history, successUpdate, setting.focusIntvlLgth]",[3884,3970],"[loading, pause, dispatch, successUpdate, intervalTime, settingUpdated, loadingUpdate, setting._id, setting.focusRoundCt, setting.focusIntvlCt, playTransition, history, playLongBreakAlert]",[2524,2537],"[setting._id, setting.shortBrkIntvlLgth]",[3341,3372],"[loading, pause, intervalTime, playMinuteAlert]",[3771,3801],"[loading, pause, intervalTime, successExerciseCtUpdate, loadingExerciseCtUpdate, dispatch, setting._id, setting.exerciseBrkCt]",[4050,4075],"[dispatch, history, playTransition, setting._id, successExerciseCtUpdate]",[2017,2030],"[setting._id, setting.focusRoundCt, setting.longBrkIntvlLgth]",[2757,2781],"[intervalTime, dispatch, loading, pause, successRoundCtUpdate, loadingRoundCtUpdate, setting._id]",[3065,3087],"[dispatch, history, loading, loadingRoundCtUpdate, playTransition, setting._id, successRoundCtUpdate]",[1408,1410],"[location.search]",[1977,2009],"[loading, pause, intervalTime, playTransition, history, setting._id]",[396,396],", [setting]",[2083,2144],"[dispatch, loading, setting, successCreate, createdSetting, history]",[1704,1749],"[dispatch, history, successUpdate, success, settingId]"]