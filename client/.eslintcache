[{"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/index.js":"1","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/App.js":"2","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reportWebVitals.js":"3","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Footer.js":"4","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/settings.js":"5","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/FormContainer.js":"6","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/FocusScreen.js":"7","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ShortBreakScreen.js":"8","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LongBreakScreen.js":"9","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LazyBreakScreen.js":"10","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ReportCardScreen.js":"11","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/NavCard.js":"12","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Tracker.js":"13","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Controls.js":"14","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SplashScreen.js":"15","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/exercises.js":"16","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SettingsEditScreen.js":"17"},{"size":517,"mtime":1611248602017,"results":"18","hashOfConfig":"19"},{"size":1259,"mtime":1611603480905,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1611245493972,"results":"21","hashOfConfig":"19"},{"size":327,"mtime":1611339382057,"results":"22","hashOfConfig":"19"},{"size":1418,"mtime":1611680908432,"results":"23","hashOfConfig":"19"},{"size":335,"mtime":1611333683986,"results":"24","hashOfConfig":"19"},{"size":3274,"mtime":1611679524388,"results":"25","hashOfConfig":"19"},{"size":3358,"mtime":1611673656089,"results":"26","hashOfConfig":"19"},{"size":1193,"mtime":1611509458378,"results":"27","hashOfConfig":"19"},{"size":1161,"mtime":1611509421165,"results":"28","hashOfConfig":"19"},{"size":1978,"mtime":1611509516550,"results":"29","hashOfConfig":"19"},{"size":584,"mtime":1611447026694,"results":"30","hashOfConfig":"19"},{"size":1238,"mtime":1611674400536,"results":"31","hashOfConfig":"19"},{"size":1608,"mtime":1611621471629,"results":"32","hashOfConfig":"19"},{"size":2940,"mtime":1611676434167,"results":"33","hashOfConfig":"19"},{"size":19927,"mtime":1611633307560,"results":"34","hashOfConfig":"19"},{"size":4220,"mtime":1611680353823,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11lpt6g",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/index.js",[],["79","80"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/App.js",["81","82"],"import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Footer from './components/Footer'\nimport SplashScreen from './screens/SplashScreen'\nimport SettingsEditScreen from './screens/SettingsEditScreen'\nimport FocusScreen from './screens/FocusScreen'\nimport ShortBreakScreen from './screens/ShortBreakScreen'\nimport LazyBreakScreen from './screens/LazyBreakScreen'\nimport LongBreakScreen from './screens/LongBreakScreen'\nimport ReportCardScreen from './screens/ReportCardScreen'\n\nconst App = () => {\n\tconst pathname = window.location.pathname\n\treturn (\n\t\t<Router>\n\t\t\t<main className='py-3'>\n\t\t\t\t<Container className='container'>\n\t\t\t\t\t<Route path='/' component={SplashScreen} exact />\n\t\t\t\t\t<Route path='/settings' component={SettingsEditScreen} />\n\t\t\t\t\t<Route path='/focus' component={FocusScreen} />\n\t\t\t\t\t<Route path='/shortbreak' component={ShortBreakScreen} />\n\t\t\t\t\t<Route path='/lazybreak' component={LazyBreakScreen} />\n\t\t\t\t\t<Route path='/longbreak' component={LongBreakScreen} />\n\t\t\t\t\t<Route path='/reportcard' component={ReportCardScreen} />\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t{pathname !== '/' && <Footer />}\n\t\t</Router>\n\t)\n}\nexport default App\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/reportWebVitals.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Footer.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/settings.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/FormContainer.js",[],["83","84"],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/FocusScreen.js",["85"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Card, ProgressBar } from 'react-bootstrap'\nimport useSound from 'use-sound'\nimport NavCard from '../components/NavCard'\nimport Tracker from '../components/Tracker'\nimport Controls from '../components/Controls'\nimport settings from '../settings'\n\nconst FocusScreen = () => {\n\tconst pathname = window.location.pathname\n\tconst history = useHistory()\n\tconst [ focusInterval, setFocusInterval ] = useState()\n\tconst [ setting, setSetting ] = useState()\n\tconst [ loading, setLoading ] = useState(true)\n\tconst [playTransition] = useSound('../sounds/transition.mp3', { volume: 0.25 })\n\tconst [playLongBreakAlert] = useSound('../sounds/longBreakAlert.mp3', { volume: 0.25 })\n\n\tuseEffect(() => {\n\t\tsetSetting(settings[0])\n\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetting && setLoading(false)\n\t\t\tif (!loading && setting.focus.intervalTime) {\n\t\t\t\tsetFocusInterval(setting.focus.intervalTime)\n\t\t\t}\n\t\t\t// return () => {\n\t\t\t// \tcleanup\n\t\t\t// }\n\t\t},\n\t\t[ setting, loading ]\n\t)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlet interval = null\n\t\t\tif (!loading && !setting.pause && focusInterval > 0) {\n\t\t\t\tinterval = setInterval(() => {\n\t\t\t\t\tsetFocusInterval((minutes) => minutes - 1)\n\t\t\t\t}, 3000)\n\t\t\t\t//60000 is one minute\n\t\t\t\t//get progress bar animation in here\n\t\t\t} else if (\n\t\t\t\t!loading &&\n\t\t\t\t!setting.pause &&\n\t\t\t\tfocusInterval === 0 &&\n\t\t\t\tsetting.focus.roundTracker < 3\n\t\t\t) {\n\t\t\t\t//set setting.focus.roundTracker to setting.focus.roundTracker +1\n\t\t\t\t//set setting.focus.completedIntervalCount to setting.focus.completedIntervalCount +1\n\t\t\t\tplayTransition()\n\t\t\t\thistory.push('/shortbreak')\n\t\t\t} else if (\n\t\t\t\t!loading &&\n\t\t\t\t!setting.pause &&\n\t\t\t\tfocusInterval === 0 &&\n\t\t\t\tsetting.focus.roundTracker === 3\n\t\t\t) {\n\t\t\t\t//set setting.focus.roundTracker to setting.focus.roundTracker +1\n\t\t\t\t//set setting.focus.completedIntervalCount to setting.focus.completedIntervalCount +1\n\t\t\t\tplayLongBreakAlert()\n\t\t\t\thistory.push('/longbreak')\n\t\t\t} else if (!loading && !setting.pause && focusInterval < 0) {\n\t\t\t\tclearInterval(interval)\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\tclearInterval(interval)\n\t\t\t}\n\t\t},\n\t\t[ focusInterval ]\n\t)\n\n\treturn (\n\t\t<>\n\t\t{!loading && (\n\t\t<Card className='card card-focus text-white bg-primary m-4'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<NavCard />\n\t\t\t</Card.Header>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1 className='timecard-title-focus'>\n\t\t\t\t\t<i className='fas fa-brain px-4 icon-focus-brain' />Focus<i className='fas fa-brain px-4 icon-focus-brain' />\n\t\t\t\t</h1>\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className='p-4'>\n\t\t\t\t<h1 className='timer text-center'>{focusInterval}</h1>\n\t\t\t\t<h2 className='text-center'>minutes</h2>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<ProgressBar\n\t\t\t\t\tclassName='progress-bar-secondary progress-bar-striped progress-bar-animated '\n\t\t\t\t\trole='progressbar'\n\t\t\t\t\taria-valuenow='75'\n\t\t\t\t\taria-valuemin='0'\n\t\t\t\t\taria-valuemax='100'\n\t\t\t\t\tstyle={{ width: '75%', marginLeft: 'auto', marginRight: 'auto' }}\n\t\t\t\t/>\n\t\t\t</Card.Body>\n\t\t\t<Tracker />\n\t\t\t<Controls pathname={pathname} focusInterval={focusInterval} />\n\t\t</Card>\n\t\t)}\n\t\t</>\n\t)\n}\n\nexport default FocusScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ShortBreakScreen.js",["86","87","88","89","90","91"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Button, Card, ListGroup } from 'react-bootstrap'\nimport NavCard from '../components/NavCard'\nimport Controls from '../components/Controls'\nimport settings from '../settings'\nimport exercises from '../exercises'\n\nconst ShortBreakScreen = () => {\n\tconst pathname = window.location.pathname\n\tconst history = useHistory()\n\tconst [ randomizedExercises, setRandomizedExercises ] = useState()\n\tconst [ shortBreakInterval, setShortBreakInterval ] = useState()\n\tconst [ setting, setSetting ] = useState()\n\tconst [ loading, setLoading ] = useState(true)\n\tconst [ exerciseBreak, setExerciseBreak ] = useState(true)\n\tconst [ exerciseIndex, setExerciseIndex ] = useState(0)\n\n\tuseEffect(() => {\n\t\tif (exercises && !randomizedExercises && loading) {\n\t\t\tlet randomized = exercises\n\t\t\t\t\t\t\t\t.map((a) => ({sort: Math.random(), value: a}))\n\t\t\t\t\t\t\t\t.sort((a, b) => a.sort - b.sort)\n\t\t\t\t\t\t\t\t.map((a) => a.value)\n\t\t\tsetRandomizedExercises(randomized)\n\t\t}\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [])\n\n\tuseEffect(() => {\n\t\tif (!setting && loading) {\n\t\tsetSetting(settings[0])\n\t\t} else if (randomizedExercises && setting && loading) {\n\t\t\tsetLoading(false)\n\t\t}\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [setting, loading])\n\tconst handleLazyBreak = () => {\n\t\tsetExerciseBreak(false)\n\t\thistory.push('/lazybreak')\n\t}\n\treturn (\n\t\t<>\n\t\t{!loading && (\n\t\t<Card className='card card-shortbreak text-white bg-success m-4'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<NavCard />\n\t\t\t</Card.Header>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1 className='timecard-title'>\n\t\t\t\t\t<i className='fas fa-heartbeat px-4 icon-break-heart' />Short\n\t\t\t\t\tBreak<i className='fas fa-heartbeat px-4 icon-break-heart' />\n\t\t\t\t</h1>\n\t\t\t</Card.Header>\n\t\t\t<Card.Body className='p-3'>\n\t\t\t\t<h1 className='timer text-center'>5</h1>\n\t\t\t\t<h4 className='text-center'>minutes</h4>\n\t\t\t</Card.Body>\n\n\t\t\t<Card.Body className='p-3'>\n\t\t\t\t<Card.Title className='px-3 exercise-name'>\n\t\t\t\t\t{randomizedExercises[exerciseIndex].name}\n\t\t\t\t</Card.Title>\n\t\t\t\t<ListGroup variant='flush'>\n\t\t\t\t\t{(randomizedExercises[exerciseIndex].description).map((exerciseStep) => (\n\t\t\t\t\t\t<ListGroup.Item key={exerciseStep}>\n\t\t\t\t\t\t\t{exerciseStep}\n\t\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t))}\n\t\t\t\t</ListGroup>\n\t\t\t</Card.Body>\n\t\t\t<Card.Body className='next-exercise-card p-3'>\n\t\t\t\t<Button\n\t\t\t\t\tclassName='btn-next-exercise float-left'\n\t\t\t\t\tvariant='link'\n\t\t\t\t\tonClick={() => handleLazyBreak()}\n\t\t\t\t>\n\t\t\t\t\t<i\n\t\t\t\t\t\tclassName='fas fa-arrow-right'\n\t\t\t\t\t\tstyle={{ transform: 'scaleX(-1)' }}\n\t\t\t\t\t/>{' '}\n\t\t\t\t\tLazy Break\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tclassName='btn-next-exercise float-right'\n\t\t\t\t\tvariant='link'\n\t\t\t\t\tonClick={() => setExerciseIndex(exerciseIndex + 1)}\n\t\t\t\t>\n\t\t\t\t\tNext Exercise <i className='fas fa-arrow-right' />\n\t\t\t\t</Button>\n\t\t\t</Card.Body>\n\t\t\t<Controls />\n\t\t</Card>\n\t\t)}\n\t\t</>\n\t)\n}\n\nexport default ShortBreakScreen\n/* <ListGroup.Item>\n\t\t\t\t\t\tFor a variation, after coming back up into a starting push-up\n\t\t\t\t\t\tposition, rotate your body to the right and extend your right\n\t\t\t\t\t\thand overhead, forming a T with your arms and torso.\n\t\t\t\t\t</ListGroup.Item>\n\t\t\t\t\t<ListGroup.Item>\n\t\t\t\t\t\tReturn to the starting position, do a regular push-up, and then\n\t\t\t\t\t\trotate to the left.\n\t\t\t\t\t</ListGroup.Item> */\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LongBreakScreen.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/LazyBreakScreen.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/ReportCardScreen.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/NavCard.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Tracker.js",["92"],"import React, { useState, useEffect } from 'react'\nimport { Card, Col } from 'react-bootstrap'\nimport settings from '../settings'\n\nconst Tracker = () => {\n\tconst [ setting, setSetting ] = useState()\n\tconst [ loading, setLoading ] = useState(true)\n\n\tuseEffect(() => {\n\t\tsetSetting(settings[0])\n\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [])\n\n\tuseEffect(() => {\n\t\tsetting && setLoading(false)\n\t})\n\n\treturn (\n\t\t<>\n\t\t{!loading &&\n\t\t<Card.Body className='p-4 tracking-container'>\n\t\t\t<Col className='rounds-container float-left'>\n\t\t\t\t<Card.Header className='rounds-header ml-auto mr-auto'>\n\t\t\t\t\t<h2 className='text-center'>Rounds</h2>\n\t\t\t\t</Card.Header>\n\t\t\t\t<h3 className='rounds-progress text-center'>{setting.focus.roundTracker} </h3>\n\t\t\t\t<hr />\n\t\t\t\t<h5 className='denominator-focus text-center'>4</h5>\n\t\t\t</Col>\n\t\t\t<Col className='goal-container float-right'>\n\t\t\t\t<Card.Header className='goal-header ml-auto mr-auto'>\n\t\t\t\t\t<h2 className='text-center'>Goal</h2>\n\t\t\t\t</Card.Header>\n\t\t\t\t<h3 className='goal-progress text-center'>{setting.focus.completedIntervalCount}</h3>\n\t\t\t\t<hr />\n\t\t\t\t<h5 className='denominator-focus text-center'>{setting.focus.completedIntervalGoal}</h5>\n\t\t\t</Col>\n\t\t</Card.Body>\n\t\t}\n\t\t</>\n\t)\n}\n\nexport default Tracker\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/components/Controls.js",["93"],"import React, { useState } from 'react'\nimport { Button, Card } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nconst Controls = () => {\n\tconst pathname = window.location.pathname\n\tconst history = useHistory()\n\tconst [ pause, setPause ] = useState(false)\n\n\tconst skipBreak = () => {\n\t\thistory.push('/focus')\n\t}\n\tconst resetInterval = () => {\n\t\tconsole.log('reset Interval')\n\t\t// pathname === '/focus' && setFocusInterval(setting.focus.intervalTime)\n\t\t// pathname === '/shortbreak' || '/lazybreak' && setFocusInterval(setting.shortBreak.intervalTime)\n\t\t// pathname === '/longBreak' && setFocusInterval(setting.longBreak.intervalTime)\n\t}\n\tconst quit = () => {\n\t\thistory.push('/reportcard')\n\t}\n\treturn (\n\t\t<Card.Footer className='p-3 text-center'>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-success mr-3'\n\t\t\t\tonClick={() => setPause(false)}\n\t\t\t>\n\t\t\t\t<i className='fas fa-play' />\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-secondary mr-3'\n\t\t\t\tonClick={() => setPause(true)}\n\t\t\t>\n\t\t\t\t<i className='fas fa-pause' />\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='btn btn-light mr-3'\n\t\t\t\tonClick={() => resetInterval()}\n\t\t\t>\n\t\t\t\t<i className='fas fa-redo-alt' />\n\t\t\t</Button>\n\t\t\t{pathname !== '/focus' && (\n\t\t\t\t<Button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='btn btn-primary mr-3'\n\t\t\t\t\tonClick={() => skipBreak()}\n\t\t\t\t>\n\t\t\t\t\t<i className='fas fa-forward' />\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t\t<Button type='button' className='btn btn-danger'>\n\t\t\t\t<i className='fas fa-power-off' onClick={() => quit()} />\n\t\t\t</Button>\n\t\t</Card.Footer>\n\t)\n}\n\nexport default Controls\n//\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SplashScreen.js",["94","95"],"import React, { useState, useEffect, useRef } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Card, Row, Col } from 'react-bootstrap'\nimport { motion } from 'framer-motion'\nimport settings from '../settings'\n\nconst SplashScreen = () => {\n\tconst history = useHistory()\n\tconst today = new Date().toLocaleDateString('en-US')\n\tconst [ loading, setLoading ] = useState(true)\n\tconst [ setting, setSetting ] = useState()\n\n\tconst [ todaySetting, setTodaySetting ] = useState(false)\n\tconst todaySettingRef = useRef(todaySetting)\n\ttodaySettingRef.current = todaySetting\n\n\tuseEffect(() => {\n\t\tsetSetting(settings[0])\n\n\t\t// return () => {\n\t\t// \tcleanup\n\t\t// }\n\t}, [])\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetting && setLoading(false)\n\t\t\tif (\n\t\t\t\t!loading &&\n\t\t\t\tsetting.settingsDate &&\n\t\t\t\t!todaySetting &&\n\t\t\t\tsetting.settingsDate === today\n\t\t\t) {\n\t\t\t\tsetTodaySetting(true)\n\t\t\t}\n\t\t\t// return () => {\n\t\t\t//     cleanup\n\t\t\t// }\n\t\t},\n\t\t[ setting, loading, today, todaySetting ]\n\t)\n\n\tuseEffect(() => {\n\t\tconst timer = setTimeout(() => {\n\t\t\ttodaySettingRef.current\n\t\t\t\t? history.push('/focus')\n\t\t\t\t: history.push('/settings')\n\t\t}, 6000)\n\n\t\treturn () => {\n\t\t\tclearTimeout(timer)\n\t\t}\n\t}, [])\n\n\t//Animations\n\tconst splashAnim = {\n\t\thidden : { opacity: 0 },\n\t\tshow   : { opacity: 1, transition: { duration: 0.75 } }\n\t}\n\tconst animContainer = {\n\t\thidden : { y: 100 },\n\t\tshow   : {\n\t\t\ty          : 0,\n\t\t\ttransition : {\n\t\t\t\tduration        : 1,\n\t\t\t\tease            : 'easeOut',\n\t\t\t\tstaggerChildren : 0.5\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<Card className='card border-primary mb-3 splash-card'>\n\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t<h1>FitFocus</h1>\n\t\t\t</Card.Header>\n\n\t\t\t<Card.Body className='px-5 py-3 text-center'>\n\t\t\t\t<Col className='splash-card-text-container text-center hide'>\n\t\t\t\t\t<motion.div\n\t\t\t\t\t\tvariants={animContainer}\n\t\t\t\t\t\tinitial='hidden'\n\t\t\t\t\t\tanimate='show'\n\t\t\t\t\t\tclassName='hide'\n\t\t\t\t\t>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tAre\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tyou\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tready\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\tto\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\twork\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.h2 variants={splashAnim} className='splash-card-text'>\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t</motion.h2>\n\t\t\t\t\t\t<motion.img\n\t\t\t\t\t\t\tvariants={splashAnim}\n\t\t\t\t\t\t\tsrc='../images/brainBiceps.png'\n\t\t\t\t\t\t\talt='brain with muscles'\n\t\t\t\t\t\t\twidth='250px'\n\t\t\t\t\t\t\tclassName='splash-img'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</motion.div>\n\t\t\t\t</Col>\n\t\t\t\t<Card.Footer className='splash-card-footer'>\n\t\t\t\t\t<p className='text-center splash-footer-text'>\n\t\t\t\t\t\tCopyright &copy; 2021 Fit & Focused\n\t\t\t\t\t</p>\n\t\t\t\t</Card.Footer>\n\t\t\t</Card.Body>\n\t\t</Card>\n\t)\n}\n\nexport default SplashScreen\n","/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/exercises.js",[],"/Users/catherinealexandra/coding_projects/redux-pomo-wkout/client/src/screens/SettingsEditScreen.js",["96"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport { Form, Button, Card } from 'react-bootstrap'\nimport FormContainer from '../components/FormContainer'\nimport settings from '../settings'\nimport NavCard from '../components/NavCard'\n\nconst SettingsEditScreen = () => {\n\tconst history = useHistory()\n\tconst previousSetting = settings[0]\n\tconst today = new Date().toLocaleDateString('en-US')\n\n\tconst [ focusInterval, setFocusInterval ] = useState(\n\t\tpreviousSetting.focus.intervalTime\n\t)\n\tconst [ shortBreakInterval, setShortBreakInterval ] = useState(\n\t\tpreviousSetting.shortBreak.intervalTime\n\t)\n\tconst [ longBreakInterval, setLongBreakInterval ] = useState(\n\t\tpreviousSetting.longBreak.intervalTime\n\t)\n\tconst [ focusGoal, setFocusGoal ] = useState(\n\t\tpreviousSetting.focus.completedIntervalGoal\n\t)\n\t// useEffect(\n\t// \t() => {\n\t// \t\t//get settings\n\t// \t\tif (previousSetting.settingsDate === today) history.push('/focus')\n\t// \t\t// return () => {\n\t// \t\t// \tcleanup\n\t// \t\t// }\n\t// \t},\n\t// \t[ previousSetting, today, history ]\n\t// )\n\n\tconsole.log(\n\t\t`focus: ${focusInterval}, shortBreak: ${shortBreakInterval}, longBreak: ${longBreakInterval}, focusGoal: ${focusGoal}`\n\t)\n\tconst submitHandler = (e) => {\n\t\te.preventDefault()\n\t\thistory.push('/focus')\n\t\t//start Focus Timer\n\t\t//create new settings document and post to MongoDB\n\t}\n\n\treturn (\n\t\t<FormContainer>\n\t\t\t<Card className='card card-settings text-white bg-secondary m-4'>\n\t\t\t\t<Card.Header className='text-center card-header p-3'>\n\t\t\t\t\t<NavCard />\n\t\t\t\t</Card.Header>\n\t\t\t\t<Card.Header className='text-center card-header px-5 py-3'>\n\t\t\t\t\t<h1>\n\t\t\t\t\t\t<i className='fas fa-cog px-4' />Settings<i className='fas fa-cog px-4' />\n\t\t\t\t\t</h1>\n\t\t\t\t\t<h5 className='card-subtitle py-2 text-center'> {today}</h5>\n\t\t\t\t</Card.Header>\n\t\t\t\t<Form className='form p-5' onSubmit={submitHandler}>\n\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect1'>\n\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\tFocus Interval\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tvalue={focusInterval}\n\t\t\t\t\t\t\tonChange={(e) => setFocusInterval(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t\t<option>30</option>\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect2'>\n\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\tShort Break Interval\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tvalue={shortBreakInterval}\n\t\t\t\t\t\t\tonChange={(e) => setShortBreakInterval(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option>5</option>\n\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect3'>\n\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\tLong Break Interval\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tvalue={longBreakInterval}\n\t\t\t\t\t\t\tonChange={(e) => setLongBreakInterval(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option>15</option>\n\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t\t<option>25</option>\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t<Form.Text>Minutes</Form.Text>\n\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t<Form.Group controlId='settingsForm.ControlSelect4'>\n\t\t\t\t\t\t<Form.Label className='col-form-label col-form-label-lg'>\n\t\t\t\t\t\t\tTotal # Focus Sessions Goal\n\t\t\t\t\t\t</Form.Label>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tclassName='setting-select'\n\t\t\t\t\t\t\tas='select'\n\t\t\t\t\t\t\tsize='lg'\n\t\t\t\t\t\t\tvalue={focusGoal}\n\t\t\t\t\t\t\tonChange={(e) => setFocusGoal(e.target.value)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<option>4</option>\n\t\t\t\t\t\t\t<option>8</option>\n\t\t\t\t\t\t\t<option>10</option>\n\t\t\t\t\t\t\t<option>12</option>\n\t\t\t\t\t\t\t<option>16</option>\n\t\t\t\t\t\t\t<option>20</option>\n\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t</Form.Group>\n\t\t\t\t\t<Button variant='primary' type='submit' className='btn-submit'>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t</FormContainer>\n\t)\n}\n\nexport default SettingsEditScreen\n",{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":25},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},{"ruleId":"97","replacedBy":"106"},{"ruleId":"99","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":76,"column":3,"nodeType":"110","endLine":76,"endColumn":20,"suggestions":"111"},{"ruleId":"101","severity":1,"message":"112","line":10,"column":8,"nodeType":"103","messageId":"104","endLine":10,"endColumn":16},{"ruleId":"101","severity":1,"message":"113","line":13,"column":10,"nodeType":"103","messageId":"104","endLine":13,"endColumn":28},{"ruleId":"101","severity":1,"message":"114","line":13,"column":30,"nodeType":"103","messageId":"104","endLine":13,"endColumn":51},{"ruleId":"101","severity":1,"message":"115","line":16,"column":10,"nodeType":"103","messageId":"104","endLine":16,"endColumn":23},{"ruleId":"108","severity":1,"message":"116","line":30,"column":5,"nodeType":"110","endLine":30,"endColumn":7,"suggestions":"117"},{"ruleId":"108","severity":1,"message":"118","line":41,"column":5,"nodeType":"110","endLine":41,"endColumn":23,"suggestions":"119"},{"ruleId":"108","severity":1,"message":"120","line":17,"column":2,"nodeType":"103","endLine":17,"endColumn":11,"suggestions":"121"},{"ruleId":"101","severity":1,"message":"122","line":8,"column":10,"nodeType":"103","messageId":"104","endLine":8,"endColumn":15},{"ruleId":"101","severity":1,"message":"123","line":3,"column":16,"nodeType":"103","messageId":"104","endLine":3,"endColumn":19},{"ruleId":"108","severity":1,"message":"124","line":53,"column":5,"nodeType":"110","endLine":53,"endColumn":7,"suggestions":"125"},{"ruleId":"101","severity":1,"message":"105","line":1,"column":27,"nodeType":"103","messageId":"104","endLine":1,"endColumn":36},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["126"],["127"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'loading', 'playLongBreakAlert', 'playTransition', 'setting.focus.roundTracker', and 'setting.pause'. Either include them or remove the dependency array.","ArrayExpression",["128"],"'pathname' is assigned a value but never used.","'shortBreakInterval' is assigned a value but never used.","'setShortBreakInterval' is assigned a value but never used.","'exerciseBreak' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loading' and 'randomizedExercises'. Either include them or remove the dependency array.",["129"],"React Hook useEffect has a missing dependency: 'randomizedExercises'. Either include it or remove the dependency array.",["130"],"React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [setting] as a second argument to the useEffect Hook.",["131"],"'pause' is assigned a value but never used.","'Row' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["132"],"no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [focusInterval, history, loading, playLongBreakAlert, playTransition, setting.focus.roundTracker, setting.pause]",{"range":"143","text":"144"},"Update the dependencies array to be: [loading, randomizedExercises]",{"range":"145","text":"146"},"Update the dependencies array to be: [setting, loading, randomizedExercises]",{"range":"147","text":"148"},"Add dependencies array: [setting]",{"range":"149","text":"150"},"Update the dependencies array to be: [history]",{"range":"151","text":"152"},[2198,2215],"[focusInterval, history, loading, playLongBreakAlert, playTransition, setting.focus.roundTracker, setting.pause]",[1083,1085],"[loading, randomizedExercises]",[1290,1308],"[setting, loading, randomizedExercises]",[396,396],", [setting]",[1179,1181],"[history]"]